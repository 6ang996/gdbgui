//- The jade project (and file extension) is now Pug, but
//- as far as I know, the python package has not been renamed, so it remains
//- a jade file for now

html
head
    title gdbgui - gdb in a browser
    link(href='static/css/gdbgui.css', rel='stylesheet')
    link(href='static/vendor/css/bootstrap.min.css', rel='stylesheet')
    link(href='static/vendor/css/messenger.css', rel='stylesheet')
    link(href='static/vendor/css/awesomeplete.css', rel='stylesheet')

    script(type="text/javascript" src='static/vendor/js/jquery.min.js')
    script(type="text/javascript" src='static/vendor/js/bootstrap.min.js')
    script(type="text/javascript" src='static/vendor/js/messenger.min.js')
    script(type="text/javascript" src='static/vendor/js/lodash.min.js')
    script(type="text/javascript" src='static/vendor/js/moment.min.js')
    script(type="text/javascript" src='static/vendor/js/awesomeplete.min.js')

body
    div.container-fluid(style="position: fixed; top: 0; margin-top: 0;
                                height: 30px; width: 100%;
                                border-bottom: black; border-style: solid; border-width: 0px; border-bottom-width: 1px;
                                z-index: 1000; background: #f1f1f1; border-bottom-color: #ccc;")
        div.row
            div(style="height: 20px; margin-top: 5px; margin-left: 10px")
                span Status:&nbsp
                span#status GDB is waiting to run a command

    div.container-fluid(style="margin-top: 50px")
        div.row
            div.col-md-12
                //- binary selection
                form(role=form)
                    div.input-group.input-group-sm
                        span.input-group-btn
                            button.btn.btn-primary#set_target_app(type="button") Load This Binary
                        input.form-control#binary(type="text", placeholder="/path/to/target/executable -and -flags", list='past_binaries', style="font-family: courier")
                        datalist#past_binaries

                //- premade buttons
                div.btn-group.btn-group-xs(role="group")
                    button.btn.btn-default.gdb_cmd(type='button', data-cmd0='-break-list', data-cmd1='-exec-run', title='Run the loaded program, or start the program over') Run
                        span.glyphicon.glyphicon-off.padding_left
                    button.btn.btn-default.gdb_cmd(type='button', data-cmd='-exec-continue', title='Continue running program') Continue
                        span.glyphicon.glyphicon-play.padding_left
                    button.btn.btn-default.gdb_cmd(type='button', data-cmd='-exec-next', title='Step to next line (will not enter function)') Next
                        span.glyphicon.glyphicon-step-forward.padding_left
                    button.btn.btn-default.gdb_cmd(type='button', data-cmd='-exec-step', title='Step into next function call or to next line') Step
                        span.glyphicon.glyphicon-arrow-down.padding_left
                    button.btn.btn-default.gdb_cmd(type='button', data-cmd='-exec-return', title='Return to calling function') Return
                        span.glyphicon.glyphicon-arrow-up.padding_left
                    button.btn.btn-default.gdb_cmd(type='button', data-cmd0='-break-insert main', data-cmd1='-break-list', title="Add breakpoint to the programs entry point") Add Breakpoint to Main
                        span.glyphicon.glyphicon-flag.padding_left
                    button.btn.btn-default.gdb_cmd(type="button", data-cmd='-exec-interrupt') Kill Target
                        span.glyphicon.glyphicon-ban-circle.padding_left

                    button.btn.btn-default.get_gdb_response(type="button") Get GDB Response


        //- source
        div.no_padding.col-md-12#source_div

            div.titlebar
                span#source_code_heading.lighttext (no source code file loaded)

            div
                input#source_file_input.dropdown-input(autocomplete='off', placeholder='Enter path here, or select from dropdown', style="width: 500px")

                button.dropdown-btn(type="button")
                    span.caret

                button.btn.btn-default.gdb_cmd.btn-xs(type="button", data-cmd='-file-list-exec-source-files') Populate List

                span.glyphicon.glyphicon-plus.resizer.pointer(data-target_selector="#code_container" data-resize_type="enlarge")
                span.glyphicon.glyphicon-minus.resizer.pointer(data-target_selector="#code_container" data-resize_type="shrink")

            div#code_container.gdb_content_div(style="height: 300px")
                table#code_table.code
                    tr
                        td Source code will be displayed here when applicable

        div.col-md-12.no_padding
            div.titlebar
                span.lighttext gdb console
                div.btn-group
                    button.btn.btn-default.btn-xs.clear_console(type='button') Clear
                        span.glyphicon.glyphicon-trash.padding_left
                    button.btn.btn-default.btn-xs.gdb_cmd(type='button', data-cmd='-data-evaluate-expression fflush(0)') Flush Output
                        span.glyphicon.glyphicon-download.padding_left
                span.glyphicon.glyphicon-plus.resizer.pointer(data-target_selector="#console" data-resize_type="enlarge")
                span.glyphicon.glyphicon-minus.resizer.pointer(data-target_selector="#console" data-resize_type="shrink")
            div#console.gdb_content_div
            div(style="position: relative")
                span.gdb_console(style="position: absolute; left: 5px; margin-top: 9px") (gdb)
                input.form-control.dropdown-input.gdb_console#gdb_command(type="text", autocomplete="on", data-list="#gdb_command_reference", style="padding-left: 45px")


        div.col-md-6.no_padding
            div.titlebar
                span.lighttext breakpoints
                button.btn.btn-default.btn-xs.gdb_cmd(type='button', data-cmd='-break-list', title="Get table of all breakpoints") Refresh
                    span.glyphicon.glyphicon-refresh.padding_left
                span.glyphicon.glyphicon-plus.resizer.pointer(data-target_selector="#breakpoints" data-resize_type="enlarge")
                span.glyphicon.glyphicon-minus.resizer.pointer(data-target_selector="#breakpoints" data-resize_type="shrink")

            div#breakpoints.gdb_content_div

        div.col-md-6.no_padding
            div.titlebar
                span.lighttext stack
                span.glyphicon.glyphicon-plus.resizer.pointer(data-target_selector="#stack" data-resize_type="enlarge")
                span.glyphicon.glyphicon-minus.resizer.pointer(data-target_selector="#stack" data-resize_type="shrink")
                button.btn.btn-default.btn-xs.gdb_cmd(type='button', data-cmd='-stack-list-frames') Refresh
                    span.glyphicon.glyphicon-refresh.padding_left
            div#stack.gdb_content_div

        div.col-md-6.no_padding
            div.titlebar
                span.lighttext registers
                span.glyphicon.glyphicon-plus.resizer.pointer(data-target_selector="#registers" data-resize_type="enlarge")
                span.glyphicon.glyphicon-minus.resizer.pointer(data-target_selector="#registers" data-resize_type="shrink")
                button.btn.btn-default.btn-xs.gdb_cmd(type='button', data-cmd0='-data-list-register-names', data-cmd1='-data-list-register-values x') Refresh
                    span.glyphicon.glyphicon-refresh.padding_left
            div#registers.gdb_content_div

        div.col-md-6.no_padding
            div.titlebar
                span.lighttext disassembly
                span#disassembly_heading
                span.glyphicon.glyphicon-plus.resizer.pointer(data-target_selector="#disassembly" data-resize_type="enlarge")
                span.glyphicon.glyphicon-minus.resizer.pointer(data-target_selector="#disassembly" data-resize_type="shrink")
                button.btn.btn-default.btn-xs#refresh_disassembly(type='button') Refresh
                    span.glyphicon.glyphicon-refresh.padding_left
            div#disassembly.gdb_content_div

        div.col-md-6.no_padding
            div.titlebar
                span.lighttext gdb machine interface output
                span.glyphicon.glyphicon-plus.resizer.pointer(data-target_selector="#gdb_mi_output" data-resize_type="enlarge")
                span.glyphicon.glyphicon-minus.resizer.pointer(data-target_selector="#gdb_mi_output" data-resize_type="shrink")
            div#gdb_mi_output.gdb_content_div

footer(style='height:200px; width:100%; margin:0; margin-top: 50px; padding:20px; background-color: #f5f5f5')
    div.row
        iframe(src="https://ghbtns.com/github-btn.html?user=cs01&repo=gdbgui&type=star&count=false", frameborder="0", scrolling="0", width="70px", height="20px")
        br
        iframe(src="https://ghbtns.com/github-btn.html?user=cs01&repo=gdbgui&type=watch&count=false&v=2", frameborder="0", scrolling="0", width="70px", height="20px")
        br
        iframe(src="https://ghbtns.com/github-btn.html?user=cs01&repo=gdbgui&type=fork&count=false", frameborder="0", scrolling="0", width="70px", height="20px")
        br
        iframe(src="https://ghbtns.com/github-btn.html?user=cs01&repo=gdbgui&type=follow&count=false", frameborder="0", scrolling="0", width="120px", height="20px")
        p

datalist(id="gdb_command_reference")
    //- TODO complete this list
    option(value="Command Description")
    option(value="help  List gdb command topics.")
    option(value="help topic-classes  List gdb command within class.")
    option(value="help command  Command description. ")
    option(value="eg help show to list the show commands")
    option(value="apropos search-word Search for commands and command topics containing search-word.")
    option(value="info args")
    option(value="i args  List program command line arguments")
    option(value="info breakpoints  List breakpoints")
    option(value="info break  List breakpoint numbers.")
    option(value="info break breakpoint-number  List info about specific breakpoint.")
    option(value="info watchpoints  List breakpoints")
    option(value="info registers  List registers in use")
    option(value="info threads  List threads in use")
    option(value="info set  List set-able option")
    option(value="Break and Watch ")
    option(value="break funtion-name")
    option(value="break line-number")
    option(value="break ClassName::functionName Suspend program at specified function of line number.")
    option(value="break +offset")
    option(value="break -offset Set a breakpoint specified number of lines forward or back from the position at which execution stopped.")
    option(value="break filename:function Don't specify path, just the file name and function name.")
    option(value="break filename:line-number  Don't specify path, just the file name and line number.")
    option(value="break Directory/Path/filename.cpp:62")
    option(value="break *address  Suspend processing at an instruction address. Used when you do not have source.")
    option(value="break line-number if condition  Where condition is an expression. i.e. x > 5")
    option(value="Suspend when boolean expression is true.")
    option(value="break line thread thread-number Break in thread at specified line number. Use info threads to display thread numbers.")
    option(value="tbreak  Temporary break. Break once only. Break is then removed. See \"break\" above for options.")
    option(value="watch condition Suspend processing when condition is met. i.e. x > 5")
    option(value="clear")
    option(value="clear function")
    option(value="clear line-number Delete breakpoints as identified by command option.")
    option(value="Delete all breakpoints in function")
    option(value="Delete breakpoints at a given line")
    option(value="delete")
    option(value="d Delete all breakpoints, watchpoints, or catchpoints.")
    option(value="delete breakpoint-number")
    option(value="delete range  Delete the breakpoints, watchpoints, or catchpoints of the breakpoint ranges specified as arguments.")
    option(value="disable breakpoint-number-or-range")
    option(value="enable breakpoint-number-or-range Does not delete breakpoints. Just enables/disables them.")
    option(value="Example:")
    option(value="Show breakpoints: info break")
    option(value="Disable: disable 2-9")
    option(value="enable breakpoint-number once Enables once")
    option(value="continue")
    option(value="c Continue executing until next break point/watchpoint.")
    option(value="continue number Continue but ignore current breakpoint number times. Usefull for breakpoints within a loop.")
    option(value="finish  Continue to end of function.")
    option(value="Line Execution  ")
    option(value="step")
    option(value="s")
    option(value="step number-of-steps-to-perform Step to next line of code. Will step into a function.")
    option(value="next")
    option(value="n")
    option(value="next number Execute next line of code. Will not enter functions.")
    option(value="until")
    option(value="until line-number Continue processing until you reach a specified line number. Also: function name, address, filename:function or")
    option(value="filename:line-number.")
    option(value="info signals")
    option(value="info handle")
    option(value="where Shows current line number and which function you are in.")
    option(value="Stack ")
    option(value="backtrace")
    option(value="bt")
    option(value="bt inner-function-nesting-depth")
    option(value="bt -outer-function-nesting-depth  Show trace of where you are currently. Which functions you are in. Prints stack backtrace.")
    option(value="backtrace full  Print values of local variables.")
    option(value="frame")
    option(value="frame number")
    option(value="f number  Show current stack frame (function where you are stopped)")
    option(value="Select frame number. can also user up/down to navigate frames")
    option(value="up")
    option(value="down")
    option(value="up number")
    option(value="down number Move up a single frame element in the call stack")
    option(value="Move down a single frame")
    option(value="Move up/down the specified number of frames in the stack.")
    option(value="info frame  List address, language, address of arguments/local variables and which registers were saved in frame.")
    option(value="info args")
    option(value="info locals")
    option(value="info catch  Info arguments of selected frame, local variables and exception handlers.")
    option(value="Source Code ")
    option(value="list")
    option(value="l")
    option(value="list line-number")
    option(value="list function")
    option(value="list -")
    option(value="list start#,end#")
    option(value="list filename:function  List source code.")
    option(value="set listsize count")
    option(value="show listsize Number of lines listed when list command given.")


script(type="text/javascript" src='static/js/gdbgui.js')
